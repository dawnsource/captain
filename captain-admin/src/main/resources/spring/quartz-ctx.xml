<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/jms
						http://www.springframework.org/schema/jms/spring-jms-3.2.xsd">
						
						
	<bean id="quartzJmsClusteredProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:quartz.properties</value>
			</list>
		</property>
	</bean>

	<bean id="quartzJndiTemplate" class="org.springframework.jndi.JndiTemplate">
		<property name="environment">
			<props>
				<prop key="java.naming.factory.initial">${quartz.jms.connectionFactory.class}</prop>
				<prop key="java.naming.provider.url">${quartz.jms.url}</prop>
				<prop key="java.naming.security.principal">${quartz.jms.username}</prop>
				<prop key="java.naming.security.credentials">${quartz.jms.password}</prop>
			</props>
		</property>
	</bean>
	<bean id="jndiQuartzConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiTemplate" ref="quartzJndiTemplate" />
		<property name="jndiName" value="${quartz.jms.connectionFactory.jndiName}" />
	</bean>
	<bean id="quartzConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="jndiQuartzConnectionFactory" />
		<property name="sessionCacheSize" value="1" />
	</bean>
	<bean id="destinationResolver"
		class="org.springframework.jms.support.destination.JndiDestinationResolver">
		<property name="jndiTemplate" ref="quartzJndiTemplate" />
		<property name="cache" value="true" />
		<property name="fallbackToDynamicDestination" value="false" />
	</bean>
	
	<!-- concurrency must be set '1' -->
	<jms:listener-container connection-factory="quartzConnectionFactory" container-type="simple" destination-type="topic" concurrency="1"
		destination-resolver="destinationResolver" cache="auto">
		<jms:listener destination="${quartz.jms.topic.instance.announcement}" ref="schedulerInstanceAnnouncementReceiver" method="handleMessage" />
		<jms:listener destination="${quartz.jms.topic.instance.list}" ref="schedulerInstanceListReceiver" method="handleMessage" />
		<jms:listener destination="${quartz.jms.topic.instance.manage}" ref="schedulerInstanceManageReceiver" method="handleMessage" />
	</jms:listener-container>
	
	<!-- listeners -->
	<bean id="schedulerInstanceAnnouncementReceiver" class="com.c306.core.quartz.jms.instance.lsnr.SchedulerInstanceAnnouncementReceiver"></bean>
	<bean id="schedulerInstanceListReceiver" class="com.c306.core.quartz.jms.instance.lsnr.SchedulerInstanceListReceiver"></bean>
	<bean id="schedulerInstanceManageReceiver" class="com.c306.core.quartz.jms.instance.lsnr.SchedulerInstanceManageReceiver"></bean>
	
	
	<bean id="quartzJmsTemplateForTopic" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="quartzConnectionFactory"/>
		<property name="destinationResolver" ref="destinationResolver"/>
		<property name="PubSubDomain" value="true"/>
		<!-- <property name="defaultDestinationName" value="queue1"/> -->
	</bean>

	<!-- producer -->
	<bean id="schedulerInstanceManager" class="com.c306.core.quartz.jms.instance.producer.SchedulerInstanceJmsManager"></bean>

</beans>
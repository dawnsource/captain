<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
    "http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>
	<!-- StrutsConstants config -->
	
	<!-- dev mode properties sets -->
	<constant name="struts.devMode" value="false" />
	<constant name="struts.i18n.reload" value="true" />
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- //end dev mode properties sets -->
	
	
	
	
	
	<!-- A list of names used to find action packages. -->
	<!-- <constant name="struts.convention.package.locators" value="com.c306" /> -->
	<!-- If set, only packages that start with this name will be scanned for actions. -->
	<constant name="struts.convention.package.locators.basePackage" value="com.c306" />
	<!--
		<constant name="struts.convention.classes.reload" value="true" />
	-->
	
	<constant name="struts.i18n.encoding" value="utf-8" />
	<constant name="struts.custom.i18n.resources" value="adminResource, queryResource"/>
	

	<!-- <constant name="struts.action.extension" value="action" /> -->
	<!-- Dynamic Method Invocation (DMI) will use the string following a "!" character in an action name
	 as the name of a method to invoke (instead of execute). -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true"/>


	<constant name="struts.ognl.allowStaticMethodAccess" value="true" />
	<constant name="struts.action.excludePattern" value="/common/ckfinder.*"/>
	
	<!-- This plugin provides a faster Java implementation of tags in the "simple" theme. -->
	<constant name="struts.ui.templateSuffix" value="java" />
	<constant name="struts.ui.theme" value="simple" />

	<package name="captain-default" extends="json-default" abstract="true">
		<interceptors>
			
            <!-- A complete stack with all the common interceptors in place.
                 Generally, this stack should be the one you use, though it
                 may do more than you need. Also, the ordering can be
                 switched around (ex: if you wish to have your servlet-related
                 objects applied before prepare() is called, you'd need to move
                 servletConfig interceptor up.

                 This stack also excludes from the normal validation and workflow
                 the method names input, back, and cancel. These typically are
                 associated with requests that should not be validated.
                 -->
                 <!-- add excludeParams ^query\..*;  -->
            <interceptor-stack name="captain-default">
                <interceptor-ref name="exception"/>
                <interceptor-ref name="alias"/>
                <interceptor-ref name="servletConfig"/>
                <interceptor-ref name="i18n"/>
                <interceptor-ref name="prepare"/>
                <interceptor-ref name="chain"/>
                <interceptor-ref name="scopedModelDriven"/>
                <interceptor-ref name="modelDriven"/>
                <interceptor-ref name="fileUpload"/>
                <interceptor-ref name="checkbox"/>
                <interceptor-ref name="multiselect"/>
                <interceptor-ref name="staticParams"/>
                <interceptor-ref name="actionMappingParams"/>
                <interceptor-ref name="params">
                    <param name="excludeParams">^query\..*,dojo\..*,^struts\..*,^session\..*,^request\..*,^application\..*,^servlet(Request|Response)\..*,parameters\...*</param>
                </interceptor-ref>
                <interceptor-ref name="conversionError"/>
                <interceptor-ref name="validation">
                    <param name="excludeMethods">input,back,cancel,browse</param>
                </interceptor-ref>
                <interceptor-ref name="workflow">
                    <param name="excludeMethods">input,back,cancel,browse</param>
                </interceptor-ref>
                <interceptor-ref name="debugging"/>
            </interceptor-stack>
            
		</interceptors>

        <default-interceptor-ref name="captain-default"/>
        
        <global-results>
			<result name="error">/errors/except.jsp</result>
			<result name="invalid.token">/errors/invalid_token.jsp</result>
		</global-results>
		
		<global-exception-mappings>
			<exception-mapping result="error" exception="java.lang.Exception"></exception-mapping>
		</global-exception-mappings>

	</package>
	

	<include file="struts/struts-query.xml" />
	<include file="struts/struts-admin.xml" />
	<include file="struts/struts-security.xml" />
	<include file="struts/struts-quartz.xml" />
	
</struts>
